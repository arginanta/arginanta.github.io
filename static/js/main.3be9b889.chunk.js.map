{"version":3,"sources":["assets/images/aneka-makanan.png","components/Navbar.js","components/Footer/Footer.js","components/ImageAndWelcome.js","components/CityCard.js","components/CityList.js","components/SearchCity.js","config/api.js","pages/Home.js","components/CategoryList.js","components/SearchKeyword.js","components/SearchCriteria.js","components/RatingLabel.js","components/RestaurantCard.js","pages/City.js","components/Review.js","components/RestaurantProfile.js","pages/RestaurantDetail.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","href","Footer","ImageAndWelcome","style","marginBottom","src","mainImage","width","alt","CityCard","props","city","name","country_name","to","id","_renderCityList","cities","length","map","key","CityList","title","showSubtitle","subtitle","SearcCity","type","placeholder","value","onChange","onClick","onClickSearch","API","baseUrl","api_key","process","Home","changeKeywordHandler","event","setState","keyword","target","searchHandler","state","url","axios","get","headers","params","q","crossDomain","then","data","status","citiesResultSearch","location_suggestions","cityKeywordSearch","catch","err","console","log","getFeaturedCities","city_ids","featuredCities","this","marginTop","SearchCity","Component","CategoryList","categories","category","categorySelected","categoryClickHandler","SearchKeyword","onClickAddToCriteria","SearchCriteria","criteria","cri","index","criteriaName","aria-hidden","color","removeCriteriaHandler","RatingLabel","backgroundColor","labelColor","borderColor","text","RestourantCard","restaurant","thumb","borderRadius","fontWeight","location","locality","address","user_rating","rating_color","aggregate_rating","rating_text","cuisines","currency","average_cost_for_two","textDecoration","City","restaurants","entity_id","entity_type","transformCategoriesData","getCityData","city_id","newCriteria","push","filter","addToCriteriaHandler","splice","getCategoriesData","renderRestaurantList","RestaurantCard","match","Review","border","review","user","profile_image","foodie_level_num","foodie_level","review_time_friendly","rating","review_text","RestaurantProfile","featured_image","votes","RestaurantDetail","getReviewsData","restaurant_id","res_Id","reviews","user_reviews","getRestaurantData","res_id","App","path","exact","component","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","require","config"],"mappings":"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","file":"static/js/main.3be9b889.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/aneka-makanan.9add47a9.png\";","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Navbar = () => (\r\n    <Link className=\"navbar navbar-expand-lg navbar-dark bg-primary sticky-top\">\r\n        <a className=\"navbar-brand\" href=\"/\">FoodParadise</a>\r\n    </Link>\r\n);\r\n\r\nexport default Navbar; ","import React from 'react';\r\nimport \"./Footer.css\";\r\n\r\nconst Footer = () => (\r\n    <footer className=\"my-footer\">\r\n        <div className=\"text-center\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-4 text-center\">\r\n                        <h5>About FoodParadise</h5>\r\n                        <ul>\r\n                            <li>\r\n                                <a href=\"/#\">About</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"/#\">Contact Us</a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col-sm-4 text-center\">\r\n                        <h5>Support</h5>\r\n                        <ul>\r\n                            <li>\r\n                                <a href=\"/#\">FAQ</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"/#\">Help Desk</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"/#\">Forums</a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col-sm-4 text-center\">\r\n                        <h5>Download App</h5>\r\n                        <ul>\r\n                            <li>\r\n                                <a href=\"/#\">Google Play</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"/#\">App Store</a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"social-networks\">\r\n                <a href=\"/#\" className=\"twitter\">\r\n                    <i className=\"fa fa-twitter\"/>\r\n                </a>\r\n                <a href=\"/#\" className=\"facebook\">\r\n                    <i className=\"fa fa-facebook-official\"/>\r\n                </a>\r\n                <a href=\"/#\" className=\"google\">\r\n                    <i className=\"fa fa-google-plus\"/>\r\n                </a>\r\n            </div>\r\n            <p className=\"footer-copyrigt\">Copyright &copy; 2020 FootParadise</p>\r\n        </div>\r\n    </footer>\r\n);\r\n\r\nexport default Footer;","import React from 'react';\r\nimport mainImage from \"../assets/images/aneka-makanan.png\";\r\n\r\nconst ImageAndWelcome = () => (\r\n    <>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\" style={{ marginBottom: 30 }}>\r\n                <img src={mainImage} width=\"100%\" alt=\"aneka-makanan\" ></img>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <div className=\"card text-white bg-success mb-3 text-center\">\r\n                        <div className=\"card-header\"><h1>Welcome to FoodParadise</h1></div>\r\n                        <div className=\"card-body\">\r\n                            <h4 className=\"card-title\">The Easiest Way to Find Restaurants and Food</h4>\r\n                            <p className=\"card-text\">You can grab information about restaurants, cafees, cuisines with just a few clicks.</p>\r\n                            <p className=\"card-text\">Start by choosing the featured cities below, or search the city name.</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </>\r\n)\r\n\r\nexport default ImageAndWelcome;","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CityCard = (props) => (\r\n    <div className=\"col-4\">\r\n        <div className=\"card bg-light mb-3\">\r\n            <div className=\"card-body\">\r\n                <h4 className=\"card-title\">{props.city.name}</h4>\r\n                <p>{props.city.country_name}</p>\r\n                <Link to={`/city/${props.city.id}`} className=\"card-text\">\r\n                See restaurants in {props.city.name}\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default CityCard;","import React from 'react';\r\nimport CityCard from \"./CityCard\";\r\n\r\nconst CityList = (props) => (\r\n    <>\r\n        <div className=\"row\">\r\n            <div className=\"col-12\">\r\n            <h3>{props.title}</h3>\r\n            {props.showSubtitle === true && props.subtitle !== '' &&\r\n                <h6 className=\"text-muted\">\r\n                    Search result for keyword '{props.subtitle}'\r\n                </h6>\r\n            }\r\n            </div>\r\n        </div>\r\n        <div className=\"row\">\r\n            {props.cities == null ? (\r\n                <div className=\"col\">\r\n                    <p>Loading ...</p>\r\n                </div>\r\n            ): (\r\n                _renderCityList(props.cities)\r\n            )}\r\n        </div>\r\n    </>\r\n);\r\n\r\nconst _renderCityList = cities => {\r\n    if (cities.length > 0) {\r\n        return cities.map(city => <CityCard key={city.id} city={city} /> );\r\n    } else {\r\n        return (\r\n            <div className=\"col\">\r\n                <p className=\"text-danger\">Data not found!</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CityList;","import React from 'react';\r\n\r\nconst SearcCity = (props) => (\r\n    <div className=\"row\" style={{ marginBottom: 30 }}>\r\n          <div className=\"col\">\r\n            <h3>Search City</h3>\r\n            <div className=\"card\">\r\n              <div className=\"card-body\"> \r\n                <div className=\"form-row\">\r\n                  <div className=\"col-11\">\r\n                    <input \r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      placeholder=\"Type keyword or city name\"\r\n                      value={props.value}\r\n                      onChange={props.onChange}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-1\">\r\n                    <button\r\n                      className=\"btn btn-primary\"\r\n                      type=\"button\"\r\n                      onClick={props.onClickSearch}\r\n                    >\r\n                      Search\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>  \r\n          </div>\r\n        </div>\r\n);\r\n\r\nexport default SearcCity;","export const API = {\r\n    zomato: {\r\n        baseUrl: 'https://developers.zomato.com/api/v2.1/',\r\n        api_key: process.env.REACT_APP_API_KEY_ZOMATO\r\n    }\r\n}","import React, {Component} from 'react'\r\nimport ImageAndWelcome from \"../components/ImageAndWelcome\";\r\nimport CityList from \"../components/CityList\";\r\nimport SearchCity from \"../components/SearchCity\";\r\nimport axios from 'axios';\r\nimport { API } from \"../config/api\";\r\n\r\nclass Home extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n          keyword: \"\",\r\n          featuredCities: null,\r\n          citiesResultSearch: null,\r\n          cityKeywordSearch: \"\"\r\n        };\r\n      }\r\n      changeKeywordHandler = (event) => {\r\n        this.setState({ keyword: event.target.value });\r\n      };\r\n      searchHandler = () => {\r\n        let keyword = this.state.keyword;\r\n        var url= `${API.zomato.baseUrl}/cities`\r\n        axios.get(url, {\r\n          headers: {\r\n            'user-key': API.zomato.api_key\r\n          },\r\n          params: {\r\n            q: keyword\r\n          },\r\n          crossDomain: true\r\n        })\r\n        .then(({data}) => {\r\n          if (data.status === \"success\") {\r\n            this.setState({\r\n              citiesResultSearch: data.location_suggestions, \r\n              keyword: \"\",\r\n              cityKeywordSearch: keyword\r\n            });\r\n          }\r\n        })\r\n        .catch(err => console.log(err))\r\n      }\r\n      getFeaturedCities = () => {\r\n        var url = `${API.zomato.baseUrl}/cities`;\r\n        axios\r\n          .get(url, {\r\n            headers: {\r\n              \"user-key\": API.zomato.api_key\r\n            },\r\n            params: {\r\n              city_ids: \"74,11052,170\"\r\n            }\r\n          })\r\n          .then(({ data }) => {\r\n            if (data.status === \"success\") {\r\n              this.setState({ featuredCities: data.location_suggestions})\r\n            }\r\n          }).catch(err => console.log(err));\r\n      };\r\n      componentDidMount() {\r\n        this.getFeaturedCities();\r\n      }\r\n    render() {\r\n        return (\r\n            <>\r\n                <ImageAndWelcome/>\r\n                <div className=\"container\" style={{ marginTop: 30, marginBottom: 30 }}>\r\n                <CityList \r\n                  cities={this.state.featuredCities} \r\n                  title={\"Featured Cities\"}\r\n                />\r\n                <SearchCity \r\n                    value={this.state.keyword} \r\n                    onChange={this.changeKeywordHandler} \r\n                    onClickSearch={this.searchHandler}\r\n                />\r\n                {this.state.cityKeywordSearch !== '' && (\r\n                <CityList\r\n                  title={'Search Result'}\r\n                  cities={this.state.citiesResultSearch}\r\n                  showSubtitle={true}\r\n                  subtitle={this.state.cityKeywordSearch}\r\n                />\r\n                )}\r\n              </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nconst CategoryList = (props) => (\r\n    props.categories ? (\r\n        <div className=\"list-group\">\r\n            {props.categories.map(category => (\r\n                <button \r\n                    key={category.id}\r\n                    className={\"list-group-item list-group-item-action \" + \r\n                    (props.categorySelected && \r\n                        category.id === props.categorySelected.id \r\n                        ? 'active' \r\n                        : '')\r\n                    }\r\n                    onClick={() => props.categoryClickHandler(category)}\r\n                >\r\n                    {category.name}\r\n                </button>\r\n            ))}\r\n        </div>\r\n    ) : (\r\n        <p>Loading...</p>\r\n    )\r\n    \r\n)\r\n\r\nexport default CategoryList;","import React from 'react';\r\n\r\nconst SearchKeyword = (props) => (\r\n    <>\r\n        <h5>Keyword</h5>\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                        <div className=\"form-row\">\r\n                            <div className=\"col-10\">\r\n                            <input\r\n                                className=\"form-control\" \r\n                                type=\"text\" placeholder=\"Type keyword i.e : restourant's name. location, cuisine, etc.\"\r\n                                value={props.keyword}\r\n                                onChange={props.changeKeywordHandler}\r\n                            />\r\n                            </div>\r\n                            <div className=\"col\">\r\n                                <button \r\n                                    className=\"btn btn-primary\" \r\n                                    type=\"button\"\r\n                                    onClick={props.onClickAddToCriteria}\r\n                                >\r\n                                    Add to criteria\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n    </>\r\n)\r\n\r\nexport default SearchKeyword;","import React from 'react';\r\n\r\nconst SearchCriteria = props => (\r\n    <div className=\"card bg-light mb-3\" style={{marginTop: 20}}>\r\n        <div className=\"card-body\">\r\n            <p className=\"card-title\">\r\n                Find Restourant based on criteria:\r\n            </p>\r\n            <table className=\"table table-hover\">\r\n                                <tbody>\r\n                                    {props.criteria.map((cri, index) => (\r\n                                        <tr key={index} className=\"table-active\">\r\n                                            <td width=\"40%\">{cri.criteriaName}</td>\r\n                                            <td width=\"50%\">{cri.data.name}</td>\r\n                                            <td>\r\n                                                {cri.criteriaName !== 'City' && (\r\n                                                    <i \r\n                                                        className=\"fa fa-times\" \r\n                                                        aria-hidden=\"true\"\r\n                                                        style={{ color: 'red' }}\r\n                                                        onClick={() => props.removeCriteriaHandler(index)}\r\n                                                    >\r\n                                                    </i>\r\n                                                )}\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        <div className=\"pull-right\">\r\n                            <button \r\n                                className=\"btn btn-primary\" \r\n                                type=\"button\" \r\n                                onClick={props.onClickSearch}\r\n                            >\r\n                                Search\r\n                            </button>\r\n                        </div>      \r\n                        </div>\r\n                    </div>                 \r\n)\r\n\r\nexport default SearchCriteria;","import React from 'react';\r\n\r\nconst RatingLabel = (props) => (\r\n    <div className=\"btn btn-sm\" \r\n        style={{\r\n            color:'white',\r\n            backgroundColor: `#${props.labelColor}`, \r\n            borderColor: `#${props.labelColor}`,\r\n        }}\r\n        >\r\n            { props.text }\r\n    </div>\r\n)\r\n\r\nexport default RatingLabel;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport RatingLabel from '../components/RatingLabel';\r\n\r\nconst RestourantCard = props => (\r\n                        <div className=\"col-6\" style={{ marginBottom: 20 }}>\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-3\">\r\n                                        <img className=\"img-responsive\" src={props.restaurant.thumb} alt=\"\" style={{ borderRadius: 5, width: 100}}/>\r\n                                    </div>\r\n                                    <div className=\"col-9\">\r\n                                    <h4 className=\"text-success\" style={{ fontWeight: 800 }}>{props.restaurant.name}</h4>\r\n                                    <h6>{props.restaurant.location.locality}</h6>\r\n                                    <h6 className=\"test-muted\">{props.restaurant.location.address}</h6>\r\n                                    </div>\r\n                                </div>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <table className=\"table\">\r\n                                        <tbody>\r\n                                        <tr>\r\n                                            <td>Rating</td>\r\n                                            <td>\r\n                                                <RatingLabel\r\n                                                    labelColor={props.restaurant.user_rating.rating_color}\r\n                                                    text={`${props.restaurant.user_rating.aggregate_rating} \r\n                                                    (${props.restaurant.user_rating.rating_text})`\r\n                                                    }\r\n                                                >\r\n                                                </RatingLabel>\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Cuisines</td>\r\n                                            <td>\r\n                                                {props.restaurant.cuisines}\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Cost for two</td>\r\n                                            <td>\r\n                                                {props.restaurant.currency + ' ' + props.restaurant.average_cost_for_two}\r\n                                            </td>\r\n                                        </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n\r\n                                </div>\r\n                                <div className=\"card-footer\">\r\n                                    <Link to={`/restaurant/${props.restaurant.id}`} style={{ textDecoration: 'none' }}>\r\n                                        <button type=\"button\" className=\"btn btn-outline-success btn-block\">\r\n                                            View restaurant Details\r\n                                        </button>\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n)\r\n\r\nexport default RestourantCard;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { API } from \"../config/api\";\r\nimport CategoryList from \"../components/CategoryList\";\r\nimport SearchKeyword from \"../components/SearchKeyword\";\r\nimport SearchCriteria from \"../components/SearchCriteria\";\r\nimport RestaurantCard from \"../components/RestaurantCard\";\r\n\r\nconst categoriesDummy = [\r\n  {\r\n    categories: {\r\n      id: 1,\r\n      name: \"Delivery\",\r\n    },\r\n  },\r\n  {\r\n    categories: {\r\n      id: 2,\r\n      name: \"Dine-out\",\r\n    },\r\n  },\r\n  {\r\n    categories: {\r\n      id: 3,\r\n      name: \"Nightlife\",\r\n    },\r\n  },\r\n  {\r\n    categories: {\r\n      id: 4,\r\n      name: \"Catching-up\",\r\n    },\r\n  },\r\n];\r\n\r\nconst restaurants = [\r\n  {\r\n    restaurant: {\r\n      id: \"18615392\",\r\n      name: \"WAKI Japanese BBQ Dining\",\r\n      location: {\r\n        address: \"Lantai 1, Jl. Tanjung Karang No. 5, Thamrin, Jakarta\",\r\n        locality: \"Thamrin\",\r\n      },\r\n      cuisines: \"Japanese, BBQ\",\r\n      average_cost_for_two: 300000,\r\n      currency: \"IDR\",\r\n      thumb:\r\n        \"https://b.zmtcdn.com/data/pictures/chains/2/18615392/0a873501ec5f81b17a7cb6cd6249a938.jpg?fit=around%7C200%3A200&crop=200%3A200%3B%2A%2C%2A\",\r\n      user_rating: {\r\n        aggregate_rating: \"4.9\",\r\n        rating_text: \"Excellent\",\r\n        rating_color: \"3F7E00\",\r\n        votes: 2953,\r\n      },\r\n    },\r\n  },\r\n  {\r\n    restaurant: {\r\n      id: \"18615392\",\r\n      name: \"WAKI Japanese BBQ Dining\",\r\n      location: {\r\n        address: \"Lantai 1, Jl. Tanjung Karang No. 5, Thamrin, Jakarta\",\r\n        locality: \"Thamrin\",\r\n      },\r\n      cuisines: \"Japanese, BBQ\",\r\n      average_cost_for_two: 300000,\r\n      currency: \"IDR\",\r\n      thumb:\r\n        \"https://b.zmtcdn.com/data/pictures/chains/2/18615392/0a873501ec5f81b17a7cb6cd6249a938.jpg?fit=around%7C200%3A200&crop=200%3A200%3B%2A%2C%2A\",\r\n      user_rating: {\r\n        aggregate_rating: \"4.9\",\r\n        rating_text: \"Excellent\",\r\n        rating_color: \"3F7E00\",\r\n        votes: 2953,\r\n      },\r\n    },\r\n  },\r\n];\r\nclass City extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      city: null,\r\n      categories: null,\r\n      categorySelected: null,\r\n      keyword: \"\",\r\n      criteria: [],\r\n      restaurants: [],\r\n    };\r\n  }\r\n  searchHandler = () => {\r\n    this.setState({ restaurants: null });\r\n    let url = `${API.zomato.baseUrl}/search`;\r\n    let params = {};\r\n\r\n    for (let cri of this.state.criteria) {\r\n      switch (cri.criteriaName) {\r\n        case \"City\":\r\n          params.entity_id = cri.data.id;\r\n          params.entity_type = \"city\";\r\n          break;\r\n        case \"Category\":\r\n          params.category = cri.data.id;\r\n          break;\r\n        case \"Keyword\":\r\n          params.q = cri.data.name;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n\r\n    axios\r\n      .get(url, {\r\n        headers: {\r\n          \"user-key\": API.zomato.api_key,\r\n        },\r\n        params,\r\n      })\r\n      .then(({ data }) => {\r\n        this.setState({ restaurants: data.restaurants });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n  transformCategoriesData = (categories) => {\r\n    let categoriesTransformed = categories.map((category) => {\r\n      return category.categories;\r\n    });\r\n    return categoriesTransformed;\r\n  };\r\n  getCityData = (city_id) => {\r\n    let url = `${API.zomato.baseUrl}/cities`;\r\n    axios\r\n      .get(url, {\r\n        headers: {\r\n          \"user-key\": API.zomato.api_key,\r\n        },\r\n        params: {\r\n          city_ids: `${city_id}`,\r\n        },\r\n      })\r\n      .then(({ data }) => {\r\n        let city = data.location_suggestions[0];\r\n        let newCriteria = {\r\n          criteriaName: \"City\",\r\n          data: city,\r\n        };\r\n        let criteria = [...this.state.criteria];\r\n        criteria.push(newCriteria);\r\n        this.setState({ city, criteria });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n  componentDidMount() {\r\n    // cara mendapatkan parameter city_id dari url / route\r\n    let { city_id } = this.props.match.params;\r\n    console.log(this.props.match);\r\n    this.getCityData(city_id);\r\n    // proses tranformasi data categories,dan di pindah -> method getCategoriesData\r\n    // let categories = this.transformCategoriesData(categoriesDummy);\r\n    // this.setState({ categories });\r\n    this.getCategoriesData();\r\n  }\r\n  categoryClickHandler = (category) => {\r\n    let criteria = [...this.state.criteria];\r\n    // ambil element array selain element dengan criteriaName 'Category'\r\n    criteria = criteria.filter((cri) => cri.criteriaName !== \"Category\");\r\n    let newCriteria = {\r\n      criteriaName: \"Category\",\r\n      data: category,\r\n    };\r\n    criteria.push(newCriteria);\r\n    this.setState({ categorySelected: category, criteria });\r\n  };\r\n  changeKeywordHandler = (event) => {\r\n    this.setState({ keyword: event.target.value });\r\n  };\r\n  addToCriteriaHandler = () => {\r\n    let criteria = [...this.state.criteria];\r\n    criteria = criteria.filter((cri) => cri.criteriaName !== \"keyword\");\r\n    let newCriteria = {\r\n      criteriaName: \"keyword\",\r\n      data: {\r\n        name: this.state.keyword,\r\n      },\r\n    };\r\n\r\n    criteria.push(newCriteria);\r\n    this.setState({ keyword: \"\", criteria });\r\n  };\r\n  removeCriteriaHandler = (index) => {\r\n    let criteria = [...this.state.criteria];\r\n    criteria.splice(index, 1);\r\n    this.setState({ criteria });\r\n  };\r\n  getCategoriesData = () => {\r\n    let url = `${API.zomato.baseUrl}/categories`;\r\n    axios\r\n      .get(url, {\r\n        headers: {\r\n          \"user-key\": API.zomato.api_key,\r\n        },\r\n      })\r\n      .then(({ data }) => {\r\n        // proses transform data categories\r\n        let categories = this.transformCategoriesData(data.categories);\r\n        this.setState({ categories });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n  renderRestaurantList = () => {\r\n    if (this.state.restaurants == null) {\r\n      return (\r\n        <div className=\"col\">\r\n          <p>Loading...</p>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (this.state.restaurants.length > 0) {\r\n      return this.state.restaurants.map(({ restaurant }) => (\r\n        <RestaurantCard key={restaurant.id} restaurant={restaurant} />\r\n      ));\r\n    } else {\r\n      return (\r\n        <div className=\"col\">\r\n          <p>No Data available. Pleace select criteria, and click Search</p>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"container-fluid\"\r\n        style={{ marginTop: 30, marginBottom: 30 }}\r\n      >\r\n        {this.state.city && (\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <h4 className=\"text-success\">\r\n                Restaurant in {this.state.city.name},{\" \"}\r\n                {this.state.city.country_name}\r\n              </h4>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-3\">\r\n            <h5>Categories</h5>\r\n            <CategoryList\r\n              categories={this.state.categories}\r\n              categorySelected={this.state.categorySelected}\r\n              categoryClickHandler={(category) =>\r\n                this.categoryClickHandler(category)\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"col\">\r\n            <SearchKeyword\r\n              keyword={this.state.keyword}\r\n              changeKeywordHandler={this.changeKeywordHandler}\r\n              onClickAddToCriteria={this.addToCriteriaHandler}\r\n            />\r\n            <SearchCriteria\r\n              criteria={this.state.criteria}\r\n              removeCriteriaHandler={(index) =>\r\n                this.removeCriteriaHandler(index)\r\n              }\r\n              onClickSearch={this.searchHandler}\r\n            />\r\n            <div className=\"row\">\r\n              <div className=\"col\" style={{ marginBottom: 10 }}>\r\n                <h4 className=\"text-success\">Restaurant List</h4>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">{this.renderRestaurantList()}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default City;\r\n","import React from \"react\";\r\nimport RatingLabel from \"./RatingLabel\";\r\n\r\nconst Review = (props) => (\r\n  <div className=\"card border-success\" style={{ marginBottom: 5 }}>\r\n    <div className=\"card-body\">\r\n      <div className=\"row\" style={{ marginBottom: 20 }}>\r\n        <div className=\"col-1\" style={{ border: \"0px solid black\" }}>\r\n          <img\r\n            className=\"img-responsive\"\r\n            src={props.review.user.profile_image}\r\n            alt=\"\"\r\n            style={{ borderRadius: \"50%\", width: 80 }}\r\n          />\r\n        </div>\r\n        <div className=\"col-11\" style={{ border: \"0px solid black\" }}>\r\n          <h6 className=\"font-weight-bold\">{props.review.user.name}</h6>\r\n          <RatingLabel\r\n            text={`${props.review.user.foodie_level_num} \r\n            (${props.review.user.foodie_level})`}\r\n            labelColor={`${props.review.rating_color}`}\r\n          />\r\n        </div>\r\n      </div>\r\n      <h6 className=\"card-text text-muted\">\r\n        {props.review.review_time_friendly}\r\n      </h6>\r\n      <RatingLabel\r\n        text={`${props.review.rating} \r\n        (${props.review.rating_text}`}\r\n        labelColor={`${props.review.rating_color}`}\r\n      />\r\n      <p className=\"card-text\">{props.review.review_text}</p>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Review;\r\n","import React from \"react\";\r\nimport RatingLabel from \"./RatingLabel\";\r\n\r\nconst RestaurantProfile = (props) => (\r\n  <div className=\"card\">\r\n    <div className=\"card-header\">\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          {props.restaurant ? (\r\n            <>\r\n              <h4 className=\"text-success\" style={{ fontWeight: 800 }}>\r\n                {props.restaurant.name}\r\n              </h4>\r\n              <h6 style={{ fontWeight: 600 }}>\r\n                {props.restaurant.location.locality}\r\n              </h6>\r\n              <h6 className=\"text-muted\">\r\n                {props.restaurant.location.address}\r\n              </h6>\r\n            </>\r\n          ) : (\r\n            <p>Loading...</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div className=\"card-body\">\r\n      {props.restaurant ? (\r\n        <div className=\"row\">\r\n          <div className=\"col-6\">\r\n            <img\r\n              className=\"img-responsive\"\r\n              src={props.restaurant.featured_image}\r\n              alt=\"\"\r\n              style={{ borderRadius: 5, width: 500 }}\r\n            />\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <table className=\"table\">\r\n              <tbody>\r\n                <tr>\r\n                  <td>Rating</td>\r\n                  <td>\r\n                    <RatingLabel\r\n                      labelColor={props.restaurant.user_rating.rating_color}\r\n                      text={`${props.restaurant.user_rating.aggregate_rating} \r\n                                                        (${props.restaurant.user_rating.rating_text})`}\r\n                    ></RatingLabel>\r\n                    <h6>{props.restaurant.user_rating.votes} Votes </h6>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Cuisines</td>\r\n                  <td>{props.restaurant.cuisines}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Cost for two</td>\r\n                  <td>\r\n                    {props.restaurant.currency +\r\n                      \" \" +\r\n                      props.restaurant.average_cost_for_two}\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <p>Loading...</p>\r\n      )}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default RestaurantProfile;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { API } from \"../config/api\";\r\nimport Review from \"../components/Review\";\r\nimport RestaurantProfile from \"../components/RestaurantProfile\";\r\n\r\nclass RestaurantDetail extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      restaurant: null,\r\n      reviews: null,\r\n    };\r\n  }\r\n  getReviewsData = (restaurant_id) => {\r\n    let url = `${API.zomato.baseUrl}/reviews`;\r\n    axios\r\n      .get(url, {\r\n        headers: {\r\n          \"user-key\": API.zomato.api_key,\r\n        },\r\n        params: {\r\n          res_Id: restaurant_id,\r\n        },\r\n      })\r\n      .then(({ data }) => {\r\n        this.setState({ reviews: data.user_reviews });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n  getRestaurantData = (restaurant_id) => {\r\n    let url = `${API.zomato.baseUrl}/restaurant`;\r\n    axios\r\n      .get(url, {\r\n        headers: {\r\n          \"user-key\": API.zomato.api_key,\r\n        },\r\n        params: {\r\n          res_id: restaurant_id,\r\n        },\r\n      })\r\n      .then(({ data }) => {\r\n        this.setState({ restaurant: data });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n  componentDidMount() {\r\n    let { params } = this.props.match;\r\n    this.getRestaurantData(params.restaurant_id);\r\n    this.getReviewsData(params.restaurant_id);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container\" style={{ marginBottom: 30 }}>\r\n        <div className=\"row\">\r\n          <div className=\"col-12\" style={{ marginBottom: 20 }}>\r\n            <RestaurantProfile restaurant={this.state.restaurant} />\r\n            <div className=\"col-12\" style={{ marginBottom: 20 }}>\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <h4 className=\"text-success\" style={{ fontWeight: 800 }}>\r\n                    Reviews\r\n                  </h4>\r\n                  {this.state.reviews ? (\r\n                    this.state.reviews.map(({ review }) => (\r\n                      <Review key={review.id} review={review} />\r\n                    ))\r\n                  ) : (\r\n                    <p>Loading...</p>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RestaurantDetail;\r\n","import React, { Component } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Footer from \"./components/Footer/Footer\";\nimport Home from \"./pages/Home\";\nimport City from \"./pages/City\";\nimport RestaurantDetail from \"./pages/RestaurantDetail\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <Navbar />\n        <Route path=\"/\" exact component={Home}></Route>\n        <Route path=\"/city/:city_id\" component={City}></Route>\n        {/* tanda titik dua (:) sebelum restaurant_id menandakan bahwa restaurant_id adalah parameter yang nilai nya dapat berubah-ubah. restaurant_id ini akan kita gunakan untuk mendapatkan data restaurant. */}\n        <Route\n          path=\"/restaurant/:restaurant_id\"\n          component={RestaurantDetail}\n        ></Route>\n        <Footer />\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nrequire(\"dotenv\").config();"],"sourceRoot":""}